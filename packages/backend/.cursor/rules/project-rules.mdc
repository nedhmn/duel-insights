---
description:
globs:
alwaysApply: true
---

- Don't add comments to the top of python files
- All http requests should be done with the httpx library
- Make tests minimal
- Python functions, class, methods, etc. documentation should just be a one line comment, not multilines
  - Try to avoid these oneline comment function descriptions as much as possible. eg. if the function name is clear enough, don't add any comments.
- When setting types, use `| None` instead of `Optional` from the typing library.
- Don't import `Dict` or `List` from typing, you can use the base `dict` and `list` instead
- No description comments/documentation for pydantic models
- Each route, including subroutes, should have it's own directory with atleast a models, routes, and services python files
- Use functional, declarative programming; avoid classes where possible, including in these FastAPI `services.py` files
- If a dependency injection is only used in one (sub)route, just throw it in it's `routes.py` file. Otherwise, hoist a shared dependency to `packages/backend/app/api/deps.py` file
- If you're repeating depdency injections, even if it's in one route file, don't constantly type out `Depends(function)`, assign it like this:

```python
AccountDep = Annotated[Account, Depends(get_account)]
```

- When using pydantic library, make sure we're using v2 and get up-to-date docs on it from context7
- When using FastAPI or SQLAlchemy, make sure to reference up-to-date docs from context7
- Use `uv run {command}` for python commands. Just ensure you're using the virtual enviornment and uv when running python code.
